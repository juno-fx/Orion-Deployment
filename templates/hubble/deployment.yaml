{{- if .Values.active }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hubble
  namespace: {{ .Values.namespace }}
spec:
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      app: hubble

  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 50%
    type: RollingUpdate

  template:
    metadata:
      annotations:
        # Allow for footprint consolidation
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: hubble

    spec:
      {{- if .Values.image_pull_secret }}
      imagePullSecrets:
        - name: {{ .Values.image_pull_secret }}
      {{- end }}
      {{- if .Values.hubble.node_selector.enable }}
      nodeSelector:
        {{- range $key, $value := .Values.hubble.node_selector.labels }}
        {{ $key }}: "{{ $value }}"
        {{- end }}
      {{- end }}
      serviceAccountName: orion-hubble
      containers:
        - name: hubble
          image: {{ .Values.registry }}/{{ tpl .Values.hubble.image . }}
          imagePullPolicy: Always
          env:
            - name: "AUTH_TRUST_HOST"
              value: "true"
            - name: "NEXTAUTH_URL"
              value: "{{ tpl .Values.nextauth_url_tpl . }}"
            - name: "LUNA"
              value: "deactivated"
            - name: "TERRA"
              value: "deactivated"
          {{- if not .Values.kuiper.enabled}}
            - name: "KUIPER"
              value: "deactivated"
          {{- end }}
          {{- range $key, $value := .Values.hubble.env }}
            - name: "{{ $key }}"
              value: "{{ $value }}"
          {{- end }}
            - name: JUNO_PROJECT
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          resources:
            requests:
              cpu: 200m
              memory: 500Mi
          ports:
            - containerPort: 3000
              name: endpoint
            - containerPort: 8000
              name: socket
{{- end }}
