apiVersion: apps/v1
kind: Deployment
metadata:
  name: titan
  namespace: {{ .Values.namespace }}
spec:
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      app: titan

  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 50%
    type: RollingUpdate

  template:
    metadata:
      labels:
        app: titan

    spec:
      serviceAccountName: titan

      {{- if .Values.titan.node_selector.enable }}
      nodeSelector:
        {{- range $key, $value := .Values.titan.node_selector.labels }}
        {{ $key }}: {{ $value }}
        {{- end }}
      {{- end }}

      containers:
        - name: titan
          imagePullPolicy: Always
          image: {{.Values.registry}}/{{ .Values.titan.image }}
          livenessProbe:
            httpGet:
              path: "/.health"
              port: 8000
            periodSeconds: 5
            failureThreshold: 2
          startupProbe:
            httpGet:
              path: "/.health"
              port: 8000
            initialDelaySeconds: 15
            periodSeconds: 5
            failureThreshold: 2
          env:
            - name: ORION_OWNER
              value: {{ .Values.titan.owner }}
            - name: PROJECT
              value: {{lower .Values.show }}
            - name: PROJECT_GUID
              value: "{{ .Values.guid }}"
          resources:
            requests:
              cpu: 500m
              memory: 200Mi
          ports:
            - containerPort: 8000
              name: endpoint
          volumeMounts:
            - mountPath: /opt/titan
              name: juno-auth
      volumes:
        - name: juno-auth
          configMap:
            name: juno-auth
            items:
              - key: key.json
                path: key.json
